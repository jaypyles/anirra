[project]
name = "saas-backend"
version = "0.1.0"
description = "Default template for PDM package"
authors = [{ name = "Jayden Pyles", email = "jpylesbusiness@gmail.com" }]
dependencies = [
    "fastapi>=0.115.6",
    "sqlalchemy>=2.0.37",
    "pyjwt>=2.10.1",
    "sqlalchemy-stubs>=0.4",
    "python-dotenv>=1.0.1",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
    "httpx>=0.28.1",
    "freezegun>=1.5.1",
    "uvicorn>=0.34.0",
    "python-multipart>=0.0.20",
    "rapidfuzz>=3.13.0",
    "numpy>=2.2.4",
    "scikit-learn>=1.6.1",
    "pyaml>=25.1.0",
    "requests>=2.32.3",
]
requires-python = "==3.12.*"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project.scripts]
saas-backend = "saas_backend.__main__:main"

[tool.pdm]
distribution = true

[tool.pyright]
include = ["src/**/*.py"]
exclude = [".venv"]

# Type checking strictness
typeCheckingMode = "strict"  # Enables strict type checking mode
reportPrivateUsage = "error"
reportMissingTypeStubs = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedClassDecorator = "error"
reportUntypedBaseClass = "error"
reportInvalidTypeVarUse = "error"
reportUnnecessaryTypeIgnoreComment = "information"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"

# Additional checks
reportImplicitStringConcatenation = "error"
reportInvalidStringEscapeSequence = "error"
reportMissingImports = "error"
reportMissingModuleSource = "error"
reportOptionalCall = "error"
reportOptionalIterable = "error"
reportOptionalMemberAccess = "error"
reportOptionalOperand = "error"
reportOptionalSubscript = "error"
reportTypedDictNotRequiredAccess = "error"

# Function return type checking
reportIncompleteStub = "error"
reportIncompatibleMethodOverride = "error"
reportInvalidStubStatement = "error"
reportInconsistentOverload = "error"

# Misc settings
pythonVersion = "3.12"  # Matches your Python version from pyproject.toml
strictListInference = true
strictDictionaryInference = true
strictSetInference = true

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
testpaths = ["src/saas_backend/tests"]

[tool.pytest]
addopts = "-s"
